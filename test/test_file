#!/usr/bin/env bash
source $(dirname $0)/../lib/file.inc

function oneTimeSetUp() {
  LOPEN_MAILCAP_FILE=$(dirname $0)/testfiles/mailcap
  LOPEN_MIMETYPES=$(dirname $0)/testfiles/mime.types
  TXTSYMLINK=$(dirname $0)/testfiles/symlink.txt
  TXTFILE=$(dirname $0)/testfiles/test.txt
  MDFILE=$(dirname $0)/testfiles/test.md
  MKDFILE=$(dirname $0)/testfiles/test.mkd
  MARKDOWNFILE=$(dirname $0)/testfiles/test.markdown
  NFOFILE=$(dirname $0)/testfiles/test.nfo
  DOCFILE=$(dirname $0)/testfiles/test.doc
}

testFileMimetype() {
  assertEquals "$(basename ${TXTFILE})"       "text/plain"    "$(file_mimetype "${TXTFILE}")"
  assertEquals "$(basename ${MDFILE})"        "text/markdown" "$(file_mimetype "${MDFILE}")"
  assertEquals "$(basename ${MKDFILE})"       "text/markdown" "$(file_mimetype "${MKDFILE}")"
  assertEquals "$(basename ${MARKDOWNFILE})"  "text/markdown" "$(file_mimetype "${MARKDOWNFILE}")"
  assertEquals "$(basename ${NFOFILE})"       "text/plain"    "$(file_mimetype "${NFOFILE}")"
  assertEquals "$(basename ${TXTSYMLINK})"    "text/plain"    "$(file_mimetype "${TXTSYMLINK}")"
}

testFileCmd() {
  c="file_cmd"
  assertEquals "plaintext_cmd %s"     "plaintext_cmd ${TXTFILE}"   "$($c ${TXTFILE})"
  assertEquals "mimetype_cmd %t %s"   "mimetype_cmd application/msword ${DOCFILE}"   "$($c ${DOCFILE})"
}

testMimeTypes() {
  assertEquals ".md"           "text/markdown"           "$(_file_mimetype test.md)"
  assertEquals ".mkd"          "text/markdown"           "$(_file_mimetype test.mkd)"
  assertEquals ".markdown"     "text/markdown"           "$(_file_mimetype test.markdown)"
  assertEquals ".nfo"          "text/plain"              "$(_file_mimetype test.nfo)"
  assertEquals ".g"            ""                        "$(_file_mimetype test.g)"
  assertEquals ".doc"          "application/msword"      "$(_file_mimetype test.doc)"
}


source $(dirname $0)/../vendor/shunit.inc
