#!/usr/bin/env bash
source $(dirname $0)/../lib/functions.inc

function oneTimeSetUp() {
  TXTSYMLINK=$(dirname $0)/testfiles/symlink.txt
  TXTFILE=$(dirname $0)/testfiles/test.txt
  MDFILE=$(dirname $0)/testfiles/test.md
  MKDFILE=$(dirname $0)/testfiles/test.mkd
  MARKDOWNFILE=$(dirname $0)/testfiles/test.markdown
}

function testInputType() {
  assertEquals "existent file"      "file"      "$(input_type ${TXTFILE})"
  assertTrue   "existent file returns true"     "input_type ${TXTFILE}"
  assertEquals "nonexistent file"   ""          "$(input_type xxx)"
  assertFalse  "nonexistent file returns false" "input_type xxx"

  assertEquals "http://"            "url"       "$(input_type "http://www.google.com")"
  assertEquals "ftp://"             "url"       "$(input_type "ftp://www.google.com")"
  assertTrue   "ftp://"                         "input_type 'https://www.google.com'"
  assertEquals "https://"           "url"       "$(input_type "https://www.google.com")"
  assertTrue   "https://"                       "input_type 'ftp://www.google.com'"

  assertTrue "http://" "input_type 'http://www.google.com'"
}

function testMimetype() {
  assertEquals "$(basename ${TXTFILE})"       "text/plain"    "$(mimetype "${TXTFILE}")"
  assertEquals "$(basename ${MDFILE})"        "text/markdown" "$(mimetype "${MDFILE}")"
  assertEquals "$(basename ${MKDFILE})"       "text/markdown" "$(mimetype "${MKDFILE}")"
  assertEquals "$(basename ${MARKDOWNFILE})"  "text/markdown" "$(mimetype "${MARKDOWNFILE}")"
  assertEquals "$(basename ${TXTSYMLINK})"    "text/plain"    "$(mimetype "${TXTSYMLINK}")"
}

testGetCommand() {
  assertEquals "text/markdown"  "markdown_cmd %s"   "$(get_command 'text/markdown')"
  assertEquals "text/plain"     "plaintext_cmd %s"  "$(get_command 'text/plain')"
}

# load and run shUnit2
source $(dirname $0)/shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
