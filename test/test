#!/usr/bin/env bash
source $(dirname $0)/../lib/functions.inc
source $(dirname $0)/../lib/mailcap.inc
source $(dirname $0)/../lib/file.inc

LOPEN_PAGER="less"

LOPEN_BROWSER="my_browser"
LOPEN_SCHEMES=(http https ftp)

function oneTimeSetUp() {
  LOPEN_MAILCAP_FILE=$(dirname $0)/testfiles/mailcap
  LOPEN_FILETYPES=$(dirname $0)/testfiles/filetypes
  TXTSYMLINK=$(dirname $0)/testfiles/symlink.txt
  TXTFILE=$(dirname $0)/testfiles/test.txt
  MDFILE=$(dirname $0)/testfiles/test.md
  MKDFILE=$(dirname $0)/testfiles/test.mkd
  MARKDOWNFILE=$(dirname $0)/testfiles/test.markdown
  NFOFILE=$(dirname $0)/testfiles/test.nfo
}

testInputType() {
  assertEquals "existent file"      "file"              "$(input_type ${TXTFILE})"
  assertEquals "nonexistent file"   ""                  "$(input_type xxx)"
  assertEquals "http://"            "http"              "$(input_type "http://www.google.com")"
  assertEquals "ftp://"             "ftp"               "$(input_type "ftp://www.google.com")"
  assertEquals "https://"           "https"             "$(input_type "https://www.google.com")"
  assertEquals "blah:// stderr"     "unknown protocol"  "$(input_type "blah://www.google.com" 2>&1)"
  assertEquals "blah:// stdout"     ""                  "$(input_type "blah://www.google.com" 2>/dev/null)"

  assertTrue   "existent file returns true"             "input_type ${TXTFILE}"
  assertFalse  "nonexistent file returns false"         "input_type xxx"
  assertTrue   "https:// status"                        "input_type 'https://www.google.com'"
  assertTrue   "http:// status"                         "input_type 'http://www.google.com'"
  assertTrue   "ftp:// status"                          "input_type 'ftp://www.google.com'"
  assertFalse  "blah:// status"                         "input_type 'blah://www.google.com' >&/dev/null"
}

# load and run shUnit2
source $(dirname $0)/../vendor/shunit.inc

# vim: ai ts=2 sw=2 et sts=2 ft=sh
